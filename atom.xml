<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[geekzph's blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://geekzph.github.io/"/>
  <updated>2015-10-11T16:27:28.000Z</updated>
  <id>http://geekzph.github.io/</id>
  
  <author>
    <name><![CDATA[geekzph]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[使用Hexo搭建个人博客]]></title>
    <link href="http://geekzph.github.io/2015/10/11/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://geekzph.github.io/2015/10/11/使用Hexo搭建个人博客/</id>
    <published>2015-10-11T13:59:13.000Z</published>
    <updated>2015-10-11T16:27:28.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Hexo是什么">Hexo是什么</h3><p>Hexo是一款基于Node.js的快速，简单并且强大的静态博客框架，可以用Markdown写博客然后Hexo会在几秒钟之内生成漂亮的静态网页。生成后的静态网页可以直接部署到到Github Pages上。本文将介绍mac下的具体搭建方法。</p>
<h3 id="如何安装">如何安装</h3><h5 id="安装需求">安装需求</h5><p>安装Hexo非常简单。只需要先安装下面两个软件</p>
<ul>
<li><a href="http://nodejs.org" target="_blank" rel="external">Node.js</a></li>
<li><a href="http://www.github.com" target="_blank" rel="external">Git</a></li>
</ul>
<p>安装Git</p>
<pre><code>$ <span class="keyword">brew </span>install git
</code></pre><p>安装Node.js最好的方法是用nvm，nvm全称Node Version Manager，之所以需要这个工具是因为Node.js的各种特性没有稳定下来，可以使用它切换版本</p>
<pre><code>$ curl http<span class="variable">s:</span>//raw.github.<span class="keyword">com</span>/creationix/nvm/master/install.<span class="keyword">sh</span> | <span class="keyword">sh</span>
</code></pre><p>nvm安装完成之后就可以安装Node.js了</p>
<pre><code>$ nvm <span class="keyword">install</span> <span class="number">0.12</span>
</code></pre><p>接着安装Hexo</p>
<pre><code>$ npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> hexo-cli</span>
</code></pre><h4 id="安装Hexo">安装Hexo</h4><p>安装Hexo只需要一条命</p>
<pre><code>$ npm <span class="operator"><span class="keyword">install</span> hexo-cli -<span class="keyword">g</span></span>
</code></pre><h3 id="配置">配置</h3><p>接下来需要新建一个文件夹来存放博客内容，这里我创建在~/blog 目录下<br>然后把路径切换至这个目录下面</p>
<pre><code><span class="char">$ </span>hexo init ~/blog
<span class="char">$ </span>npm install
</code></pre><p>配置好了之后，文件夹内容如下所示</p>
<pre><code>.
├── _config.yml
├── package.json
├── scaffolds
├── scripts
├── source
<span class="string">|   ├── _drafts</span>
<span class="string">|   └── _posts</span>
└── themes
</code></pre><p>安装常用插件</p>
<pre><code>npm <span class="operator"><span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save    #索引</span>
npm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save  #归档</span>
npm <span class="keyword">install</span> hexo-generator-<span class="keyword">category</span> <span class="comment">--save #分类</span>
npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save      #标签</span>
npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save             #本地服务器</span>
npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save       #git部署</span>
npm <span class="keyword">install</span> hexo-generator-feed@<span class="number">1</span> <span class="comment">--save   #生成rss</span>
npm <span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1</span> <span class="comment">--save#生成站点地图</span></span>
</code></pre><h3 id="写文章">写文章</h3><p>使用下面命令写文章</p>
<pre><code>$ hexo new <span class="string">[layout]</span> &lt;title&gt;
</code></pre><p>Hexo提供了三种布局：post，page和draft，默认值为：post。例如写一篇名为“Hexo简介”的文章，命令为</p>
<pre><code>$ hexo <span class="keyword">new</span> <span class="string">"Hexo简介"</span>
</code></pre><p>命令执行后文章文件被保存到source/_posts下，名为“Hexo简介.md”为md格式文件，打开即可编辑文章的内容。打开内容入下</p>
<pre><code>title: Hello World
date: 2013/7/13 20:46:25
<span class="header">tag:
---</span>
</code></pre><p>可编辑tag的值，并且添加categories等字段，例如</p>
<pre><code>title: Hello World
date: <span class="number">2013</span>/<span class="number">7</span>/<span class="number">13</span> <span class="number">20</span>:<span class="number">46</span>:<span class="number">25</span>
categories:
- 随笔
tags:
- Python
- 算法
comments: <span class="literal">false</span>   <span class="preprocessor">#不显示评论</span>
</code></pre><p>执行下面命令,打开<a href="http://0.0.0.0:4000,本地查看效果" target="_blank" rel="external">http://0.0.0.0:4000,本地查看效果</a></p>
<pre><code>$ hexo <span class="keyword">server</span>    <span class="preprocessor">#简写命令 hexo s</span>
</code></pre><h3 id="部署到Github上">部署到Github上</h3><h4 id="生成Github_Pages">生成Github Pages</h4><ol>
<li>登陆到Github</li>
<li>在主页右上角创建New repository，Repository name必须为用户名yourname,github.io，比如我的用户名为geekzph，因此应设置为geekzph.github.io</li>
<li>选为public，点击Create</li>
<li>在打开的页面右侧点Settigs，之后点Launch automatic page generator，这样Github Pages就已经生成了</li>
</ol>
<h4 id="发布博客到Github上">发布博客到Github上</h4><p>打开博客目录下的站点配置文件_config.yml，添加以下字段，注意冒号后面都得有空格，否则会出错，yourname为自己的Github账户名字</p>
<pre><code><span class="attribute">deploy</span>:
  <span class="attribute">type</span>: git
  <span class="attribute">repository</span>: <span class="attribute">https</span>:<span class="comment">//github.com/yourname/yourname.github.io.git</span>
  <span class="attribute">branch</span>: master
</code></pre><p>生成静态网页</p>
<pre><code><span class="variable">$ </span>hexo generate <span class="comment">#简写命令 hexo g    </span>
</code></pre><p>执行下面命令部署</p>
<pre><code><span class="variable">$ </span>hexo deploy    <span class="comment">#简写命令 hexo d</span>
</code></pre><p>第一次执行此命令需要输入用户名和密码。<br>这时候就可以打开Github查看效果了。</p>
<blockquote>
<p>注意：执行 hexo server 等命令时需要先到博客所在目录才可以。mac下如出现编译错误需要从App Store安装Xcode。安装之后打开Xcode， Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 来安装命令行工具，或者使用命令 $ xcode–select –install。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Hexo是什么">Hexo是什么</h3><p>Hexo是一款基于Node.js的快速，简单并且强大的静态博客框架，可以用Markdown写博客然后Hexo会在几秒钟之内生成漂亮的静态网页。生成后的静态网页可以直接部署到到Github Pages上。本文将介绍ma]]>
    </summary>
    
      <category term="Hexo" scheme="http://geekzph.github.io/tags/Hexo/"/>
    
      <category term="技术" scheme="http://geekzph.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[google's new logo]]></title>
    <link href="http://geekzph.github.io/2015/10/10/google-s-new-logo/"/>
    <id>http://geekzph.github.io/2015/10/10/google-s-new-logo/</id>
    <published>2015-10-10T14:00:47.000Z</published>
    <updated>2015-10-11T14:00:49.000Z</updated>
    <content type="html"><![CDATA[<p>Google的logo使用的复杂的衬线字体，这种字体只能使用贝塞尔曲线创建曲线。所有加在一起，一共有100锚点，导致其为一个6kb的文件。经过压缩，大小变为3kb。<br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/128240-41db0110e79feef2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="old_google_logo.png"><br>经过简化的新logo，从另一方面来说，可以用圆形和矩形进行创建（除了小写e）。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/128240-6e95a06f09d0b95b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="new_google_logo.png"><br>整个logo包括：</p>
<ul>
<li>10个圆形</li>
<li>5个矩形</li>
</ul>
<h5 id="305字节是真实的大小吗？">305字节是真实的大小吗？</h5><p>尽管Google没有发布优化的305字节的logo，并且似乎网上也找不到，但是我相信他们大小降到了他们宣称的305字节。</p>
<p>为了验证这一点，我用SVG格式重画了第一个字母G，最终未经压缩的大小为302字节，压缩后未195字节。</p>
<p>下面是整个未经压缩的图像，包括两个圆和两个矩形。</p>
<pre><code>&lt;svg xmlns=<span class="string">"http://www.w3.org/2000/svg"</span>&gt;                                                        
&lt;circle r=<span class="string">"100"</span> cy=<span class="string">"100"</span> cx=<span class="string">"100"</span> <span class="built_in">fill</span>=<span class="string">"#4885ed"</span>/&gt;
&lt;circle r=<span class="string">"70"</span> cy=<span class="string">"100"</span> cx=<span class="string">"100"</span> <span class="built_in">fill</span>=<span class="string">"#ffffff"</span>/&gt;
&lt;<span class="built_in">rect</span> transform=<span class="string">"rotate(-40 166,67)"</span> <span class="variable">height</span>=<span class="string">"78"</span> <span class="variable">width</span>=<span class="string">"99"</span> y=<span class="string">"27"</span> x=<span class="string">"117"</span> <span class="built_in">fill</span>=<span class="string">"#ffffff"</span>/&gt;
&lt;<span class="built_in">rect</span> <span class="variable">height</span>=<span class="string">"30"</span> <span class="variable">width</span>=<span class="string">"88"</span> y=<span class="string">"87"</span> x=<span class="string">"111"</span> <span class="built_in">fill</span>=<span class="string">"#4885ed"</span>/&gt;
&lt;/svg&gt;
</code></pre><p>生成的图形：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/128240-da22ac8e7d7f64fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="crate_logo.png"></p>
<h5 id="为什么这很重要">为什么这很重要</h5><p>正如Google在他们的blog中写到的：</p>
<blockquote>
<p>旧的logo由于其复杂的衬线字体和过大的文件尺寸，使我们不得不为低带宽的用户提供了一个文本近似的logo。新的logo减少了文件尺寸从而避免了这一变通方案，当考虑到我们的目标是使Google变得更加容易访问和有用，这一改变是有重大影响的。</p>
</blockquote>
<p>译自：<a href="https://www.quora.com/How-could-Googles-new-logo-be-only-305-bytes-while-its-old-logo-is-14-000-bytes" target="_blank" rel="external">https://www.quora.com/How-could-Googles-new-logo-be-only-305-bytes-while-its-old-logo-is-14-000-bytes</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Google的logo使用的复杂的衬线字体，这种字体只能使用贝塞尔曲线创建曲线。所有加在一起，一共有100锚点，导致其为一个6kb的文件。经过压缩，大小变为3kb。<br>]]>
    
    </summary>
    
      <category term="google" scheme="http://geekzph.github.io/tags/google/"/>
    
      <category term="翻译" scheme="http://geekzph.github.io/categories/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://geekzph.github.io/2015/09/27/hello-world/"/>
    <id>http://geekzph.github.io/2015/09/27/hello-world/</id>
    <published>2015-09-27T13:41:23.000Z</published>
    <updated>2015-09-27T13:41:23.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
